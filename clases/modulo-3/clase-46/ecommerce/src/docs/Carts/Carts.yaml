paths:
  /api/carts/:
    get:
      summary: Obtiene todos los carritos. ADMIN token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      responses:
        "200":
          description: Carritos obtenidos exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "500":
          description: Error interno del servidor.

    post:
      summary: Crea un carrito nuevo. USER o PREMIUM token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/createCart'
      responses:
        "201":
          description: Carrito creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/success/created'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "500":
          description: Error interno del servidor.

  /api/carts/{cid}:
    get:
      summary: Obtiene un carrito a partir del cid. USER o PREMIUM token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      parameters:
      - name: cid
        in: path
        required: true
        description: ID del carrito que desea buscar.
        schema:
          $type: String
      responses:
        "200":
          description: Carrito obtenido exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Cart'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "404":
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/notFound'
        "500":
          description: Error interno del servidor.

    delete:
      summary: Borra todos los productos el carrito con el mismo cid. USER o PREMIUM token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      parameters:
      - name: cid
        in: path
        required: true
        description: ID del carrito que desea buscar.
        schema:
          $type: String
      responses:
        "200":
          description: Carrito vaciado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/success/deleted'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "404":
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/notFound'
        "500":
          description: Error interno del servidor.

  /api/carts/{cid}/purchase:
    post:
      summary: Proceso de finalización de la compra. USER o PREMIUM token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      parameters:
      - name: cid
        in: path
        required: true
        description: ID del carrito que desea buscar.
        schema:
          $type: String
      responses:
        "200":
          description: Compra finalizada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/success/purchase'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "404":
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/notFound'
        "500":
          description: Error interno del servidor.

  /api/carts/{cid}/product/{pid}:
    put:
      summary: Agrega un producto al carrito seleccionado. ADMIN token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      parameters:
      - name: pid
        in: path
        required: true
        description: ID del producto que desea agregar al carrito.
        schema:
          $type: String
      - name: cid
        in: path
        required: true
        description: ID del carrito al cual agregar el producto.
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateCart'
      responses:
        "200":
          description: Producto agregado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/success/added'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "404":
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/notFound'
        "500":
          description: Error interno del servidor.

    delete:
      summary: Elimina un producto del carrito seleccionado. USER, PREMIUM o ADMIN token requerido.
      tags:
        - Carts
      security:
        - accessToken: []
      parameters:
      - name: pid
        in: path
        required: true
        description: ID del producto que desea agregar al carrito.
        schema:
          $type: String
      - name: cid
        in: path
        required: true
        description: ID del carrito al cual agregar el producto.
        schema:
          $type: String
      responses:
        "200":
          description: Producto eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/success/deleted'
        "401":
          description: No posees identificación.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/unauthorized'
        "403":
          description: No posees autorización suficiente.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/forbiden'
        "404":
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: '#components/messages/errors/notFound'
        "500":
          description: Error interno del servidor.

components:
  schemas:
    Cart:
      type: object
      properties: 
        _id: 
          type: string
          description: ID autogenerado por Mongo.
        products:
          type: array
          description: Productos dentro del carrito.
        owner:
          type: string
          description: Dueño del carrito.
      example:
        status: Success
        payload:
          _id: ObjectId('646219b9d4018da62db37493')
          products: []
          owner: beguiristainmelina@hotmail.es
          __v: 0

  requestBodies:
    createCart:
      type: object
      properties:
        products:
          type: array
          description: Productos que tiene el carrito.
        owner:
          type: string
          description: Dueño del carrito.
      example:
          products: []
          owner: gdelucchi@me.com
    updateCart:
      type: object
      properties:
        quantity:
          type: number
          description: Cantidad de productos.
      example:
          quantity: 1

  messages:
    errors:
      unauthorized:
        type: object
        properties:
          status: 
            type: string
            description: Estado de la solicitud.
          error: 
            type: string
            description: Tipo de error.
        example:
          status: Error
          error: No authorization cookie detected.

      forbiden:
        type: object
        properties:
          status:
            type: string
            description: Estado de la solicitud.
          error: 
            type: string
            description: Tipo de error.
        example:
          status: Error
          error: Not permission.

      notFound:
        type: object
        properties:
          status:
            type: string
            description: Estado de la solicitud.
          error: 
            type: string
            description: Tipo de error.
        example:
          status: Error
          error: Not found.

    success:
      created:
        type: object
        properties:
          status:
            type: string
            description: Estado de la solicitud.
          payload:
            type: object
            description: Resultado de la solicitud.
            properties:
              _id:
                type: string
                description: ID autogenerado por Mongo.
              products:
                type: array
                description: Array de productos en carrito, creado por default en vacío.
              owner:
                type: string
                description: Dueño del carrito.
              __v:
                type: number
                description: Versión.
        example:
          status: Success
          payload: {
            products: [],
            owner: beguiristainmelina@hotmail.es,
            _id: "64d05f6777894430b30933c7",
            __v: 0
          }

      added:
        type: object
        properties:
          status:
            type: string
            description: Estado de la solicitud.
          payload:
            type: object
            description: Resultado de la solicitud.
        example:
          status: Success
          payload: Producto agregado

      purchase:
        type: object
        properties:
          status:
            type: string
            description: Estado de la solicitud.
          payload:
            type: object
            description: Resultado de la solicitud.
        example:
          status: Success
          payload: {
            code: "20230807012316",
            purchase_datatime: "2023-08-07T04:23:16.427Z",
            amount: 3199.99,
            purchaser: "beguiristainmelina@hotmail.es",
            _id: "64d071b46651985501f8a17e",
            __v: 0
          }

      deleted:
        type: object
        properties:
          status:
            type: string
            description: Estado de la solicitud.
          payload:
            type: object
            description: Resultado de la solicitud.
        example:
          status: Success,
          payload: Eliminado
